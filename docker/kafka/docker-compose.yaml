version: "3.7"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    volumes:
      - ./data:/data
    ports:
      - 2181:2181
  
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.16.17.202
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1:compact"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ./kafka-logs:/kafka
      - ./docker.sock:/var/run/docker.sock
  
  kafka-manager:
    image: sheepkiller/kafka-manager
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181

# docker exec -it kafka_kafka1_1 /bin/bash
# 自动分配机器
# kafka-topics.sh --create --topic user1 --partitions 2 --zookeeper kafka_zookeeper_1:2181 --replication-factor 1   
# kafka-topics.sh --create --topic user2 --partitions 2 --zookeeper kafka_zookeeper_1:2181 --replication-factor 1
# 手动分配机器
# kafka-topics.sh --zookeeper kafka_zookeeper_1:2181  --create --topic user1 --replica-assignment 1001,1002
# kafka-topics.sh --zookeeper kafka_zookeeper_1:2181  --create --topic user2 --replica-assignment 1003,1004

 
# kafka-topics.sh --zookeeper kafka_zookeeper_1:2181 --delete --topic user1,user2
# kafka-topics.sh --zookeeper kafka_zookeeper_1:2181 --describe --topic user1,user2
# kafka-topics.sh --zookeeper kafka_zookeeper_1:2181 --list

# kafka-console-producer.sh --broker-list kafka_kafka_1:9092 --topic topic
# kafka-console-consumer.sh --bootstrap-server kafka_kafka_1:9092 --topic topic --from-beginning

# docker-compose scale redis=3
# docker-compose up -d --scale redis=3
