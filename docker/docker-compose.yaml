version: "3.7"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    volumes:
      - ./data:/data
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.16.17.202
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1:compact"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ./kafka-logs:/kafka
      - ./docker.sock:/var/run/docker.sock

  kafka-manager:
    image: sheepkiller/kafka-manager
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181

  db:
    image: mysql:5.6
    ports:
    - 13306:3306
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - TZ=Asia/Shanghai
    volumes:
    - .:/docker-entrypoint-initdb.d
    command: [
      '--character-set-server=utf8',
      '--collation-server=utf8_unicode_ci'
    ]
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "--protocol=tcp"]
      timeout: 20s
      interval: 1s
      retries: 20

  redis:
    image: redis
    ports:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 20s
      timeout: 1s
      retries: 20

  memcached:
    image: memcached
    ports:
      - 21211:11211
    healthcheck:
      test: ["CMD", "echo", "stats", "|",  "nc", "127.0.0.1", "11211"]
      interval: 20s
      timeout: 1s
      retries: 20


# docker exec -it test_kafka_1 /bin/bash
# kafka-topics.sh --create --topic topic --partitions 4 --zookeeper test_zookeeper_1:2181 --replication-factor 1
# kafka-topics.sh --zookeeper test_zookeeper_1:2181 --describe --topic topic
# kafka-topics.sh --zookeeper test_zookeeper_1:2181 --list

# kafka-console-producer.sh --broker-list test_kafka_1:9092 --topic topic
# kafka-console-consumer.sh --bootstrap-server test_kafka_1:9092 --topic topic --from-beginning

# docker-compose scale redis=3
# docker-compose up -d --scale redis=3